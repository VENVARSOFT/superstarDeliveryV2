# Resolve react_native_pods.rb with node to allow for hoisting
require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

platform :ios, '16.0'
prepare_react_native_project!

# Disable New Architecture for compatibility
ENV['RCT_NEW_ARCH_ENABLED'] = '0'

use_frameworks! :linkage => :static

target 'golisoda_delivery' do
  config = use_native_modules!

   # GOOGLE MAP CONFIG
   pod 'react-native-google-maps', path: '../node_modules/react-native-maps'

  use_react_native!(
    :path => config[:reactNativePath],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  post_install do |installer|
    # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
      # :ccache_enabled => true
    )
    
    # Fix for Xcode 16.3 compatibility and Folly coroutines issue
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++20'
        config.build_settings['CLANG_CXX_LIBRARY'] = 'libc++'
        # Allow non-modular includes for some RN pods (e.g., Reanimated, RNGH)
        config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
        # Ensure simulator builds target arm64 on Apple Silicon
        config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'x86_64'
        # Fix Folly coroutines issue
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'FOLLY_CFG_NO_COROUTINES=1'
      end
    end

    # Ensure the app target also uses arm64 for simulator and excludes x86_64
    installer.aggregate_targets.each do |aggregate_target|
      aggregate_target.user_targets.each do |target|
        target.build_configurations.each do |config|
          config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'x86_64'
          config.build_settings['ARCHS[sdk=iphonesimulator*]'] = 'arm64'
        end
      end
    end
  end
end
